// this file is auto-generated by codegen
// do not modify it directly
import { NhomQuyen } from '@/lib/generated/prisma'

const API_URL = '/api/nhom-quyen'

export interface ApiResponse<T> {
  success: boolean
  data?: T
  message?: string
  error?: string
}

// Get list of NhomQuyen
export async function getListNhomQuyen(): Promise<ApiResponse<NhomQuyen[]>> {
  try {
    const response = await fetch(API_URL)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Get NhomQuyen by idNq
export async function getNhomQuyen(id: string): Promise<ApiResponse<NhomQuyen>> {
  try {
    const response = await fetch(`/api/nhom-quyen/${id}`)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
// Update NhomQuyen
export async function updateNhomQuyen(
  id: string,
  data: Partial<Omit<NhomQuyen, 'idNq'>>
): Promise<ApiResponse<NhomQuyen>> {
  try {
    const response = await fetch(`/api/nhom-quyen/${id}`), {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Delete NhomQuyen
export async function deleteNhomQuyen(id: string): Promise<ApiResponse<void>> {
  try {
    const response = await fetch(`/api/nhom-quyen/${id}`), {
      method: 'DELETE',
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Create new NhomQuyen
export async function createNhomQuyen(
  data: Omit<NhomQuyen, 'idNq'>
): Promise<ApiResponse<NhomQuyen>> {
  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
