// this file is auto-generated by codegen
// do not modify it directly
import { Phong } from '@/lib/generated/prisma'

const API_URL = '/api/phong'

export interface ApiResponse<T> {
  success: boolean
  data?: T
  message?: string
  error?: string
}

// Get list of Phong
export async function getListPhong(): Promise<ApiResponse<Phong[]>> {
  try {
    const response = await fetch(API_URL)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Get Phong by soPhong
export async function getPhong(soPhong: string): Promise<ApiResponse<Phong>> {
  try {
    const response = await fetch(`/api/phong/${soPhong}`)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
// Update Phong
export async function updatePhong(
  soPhong: string,
  data: Partial<Omit<Phong, 'soPhong'>>
): Promise<ApiResponse<Phong>> {
  try {
    const response = await fetch(`/api/phong/${soPhong}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Delete Phong
export async function deletePhong(soPhong: string): Promise<ApiResponse<void>> {
  try {
    const response = await fetch(`/api/phong/${soPhong}`, {
      method: 'DELETE',
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Create new Phong
export async function createPhong(
  data: Omit<Phong, 'soPhong'>
): Promise<ApiResponse<Phong>> {
  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
