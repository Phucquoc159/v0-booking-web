// this file is auto-generated by codegen
// do not modify it directly
import { TrangThai } from '@/lib/generated/prisma'

const API_URL = '/api/trang-thai'

export interface ApiResponse<T> {
  success: boolean
  data?: T
  message?: string
  error?: string
}

// Get list of TrangThai
export async function getListTrangThai(): Promise<ApiResponse<TrangThai[]>> {
  try {
    const response = await fetch(API_URL)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Get TrangThai by idTt
export async function getTrangThai(id: string): Promise<ApiResponse<TrangThai>> {
  try {
    const response = await fetch(`/api/trang-thai/${id}`)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
// Update TrangThai
export async function updateTrangThai(
  id: string,
  data: Partial<Omit<TrangThai, 'idTt'>>
): Promise<ApiResponse<TrangThai>> {
  try {
    const response = await fetch(`/api/trang-thai/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Delete TrangThai
export async function deleteTrangThai(id: string): Promise<ApiResponse<void>> {
  try {
    const response = await fetch(`/api/trang-thai/${id}`, {
      method: 'DELETE',
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Create new TrangThai
export async function createTrangThai(
  data: Omit<TrangThai, 'idTt'>
): Promise<ApiResponse<TrangThai>> {
  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
