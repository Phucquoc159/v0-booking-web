// this file is auto-generated by codegen
// do not modify it directly
import { TienNghi } from '@/lib/generated/prisma'

const API_URL = '/api/tien-nghi'

export interface ApiResponse<T> {
  success: boolean
  data?: T
  message?: string
  error?: string
}

// Get list of TienNghi
export async function getListTienNghi(): Promise<ApiResponse<TienNghi[]>> {
  try {
    const response = await fetch(API_URL)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Get TienNghi by idTn
export async function getTienNghi(id: string): Promise<ApiResponse<TienNghi>> {
  try {
    const response = await fetch(`/api/tien-nghi/${id}`)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
// Update TienNghi
export async function updateTienNghi(
  id: string,
  data: Partial<Omit<TienNghi, 'idTn'>>
): Promise<ApiResponse<TienNghi>> {
  try {
    const response = await fetch(`/api/tien-nghi/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Delete TienNghi
export async function deleteTienNghi(id: string): Promise<ApiResponse<void>> {
  try {
    const response = await fetch(`/api/tien-nghi/${id}`, {
      method: 'DELETE',
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Create new TienNghi
export async function createTienNghi(
  data: Omit<TienNghi, 'idTn'>
): Promise<ApiResponse<TienNghi>> {
  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
