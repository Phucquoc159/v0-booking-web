// this file is auto-generated by codegen
// do not modify it directly
import { KhachHang } from '@/lib/generated/prisma'

const API_URL = '/api/khach-hang'

export interface ApiResponse<T> {
  success: boolean
  data?: T
  message?: string
  error?: string
}

// Get list of KhachHang
export async function getListKhachHang(): Promise<ApiResponse<KhachHang[]>> {
  try {
    const response = await fetch(API_URL)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Get KhachHang by cccd
export async function getKhachHang(cccd: string): Promise<ApiResponse<KhachHang>> {
  try {
    const response = await fetch(`/api/khach-hang/${cccd}`)
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
// Update KhachHang
export async function updateKhachHang(
  cccd: string,
  data: Partial<Omit<KhachHang, 'cccd'>>
): Promise<ApiResponse<KhachHang>> {
  try {
    const response = await fetch(`/api/khach-hang/${cccd}`), {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Delete KhachHang
export async function deleteKhachHang(cccd: string): Promise<ApiResponse<void>> {
  try {
    const response = await fetch(`/api/khach-hang/${cccd}`), {
      method: 'DELETE',
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}

// Create new KhachHang
export async function createKhachHang(
  data: Omit<KhachHang, 'cccd'>
): Promise<ApiResponse<KhachHang>> {
  try {
    const response = await fetch(API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
    })
    return await response.json()
  } catch (error) {
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    }
  }
}
